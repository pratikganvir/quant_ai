{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a9b843a9",
   "metadata": {},
   "source": [
    "# VWAP Reversion Strategy\n",
    "This notebook implements a VWAP Reversion Strategy for 5-min or 15-min charts. The strategy is ideal for choppy days or when news causes spikes."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5be69a02",
   "metadata": {},
   "source": [
    "## Strategy Description\n",
    "1. Stock moves sharply away from VWAP and forms a reversal candle (e.g., hammer, doji).\n",
    "2. Enter a trade back toward the VWAP.\n",
    "3. Stop Loss: Candle high/low."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "16db78e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import necessary libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6aac7aa9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to calculate VWAP\n",
    "def calculate_vwap(data):\n",
    "    data['VWAP'] = (data['Close'] * data['Volume']).cumsum() / data['Volume'].cumsum()\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "adb56dd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to identify reversal candles\n",
    "def identify_reversal_candles(data):\n",
    "    data['Reversal'] = ((data['Close'] > data['Open']) & \n",
    "                        ((data['High'] - data['Close']) > 2 * (data['Close'] - data['Open']))) | \\\n",
    "                       ((data['Open'] > data['Close']) & \n",
    "                        ((data['Open'] - data['Low']) > 2 * (data['Open'] - data['Close'])))\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a72e772e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/xm/xpjbh6gs4wbd230qlkym3xqh0000gn/T/ipykernel_2421/537246728.py:3: FutureWarning: The argument 'date_parser' is deprecated and will be removed in a future version. Please use 'date_format' instead, or read your data in as 'object' dtype and then call 'to_datetime'.\n",
      "  data = pd.read_csv('data/RELIANCE_1m.csv', parse_dates=['Date'], date_parser=lambda x: pd.to_datetime(x, format='%Y-%m-%d %H:%M:%S'))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data shape after filtering for the last month: (10000, 7)\n",
      "                 Date        Open        High         Low       Close  \\\n",
      "0 2008-01-01 00:00:00  660.605408  662.662659  648.056152  651.062012   \n",
      "1 2008-01-01 00:01:00  660.599852  662.660278  648.052374  651.064155   \n",
      "2 2008-01-01 00:02:00  660.594296  662.657897  648.048596  651.066298   \n",
      "3 2008-01-01 00:03:00  660.588740  662.655515  648.044818  651.068441   \n",
      "4 2008-01-01 00:04:00  660.583184  662.653134  648.041041  651.070584   \n",
      "\n",
      "    Adj Close        Volume  \n",
      "0  576.367920  5.270274e+06  \n",
      "1  576.369817  5.276085e+06  \n",
      "2  576.371714  5.281896e+06  \n",
      "3  576.373611  5.287707e+06  \n",
      "4  576.375509  5.293518e+06  \n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/xm/xpjbh6gs4wbd230qlkym3xqh0000gn/T/ipykernel_2421/537246728.py:12: FutureWarning: 'T' is deprecated and will be removed in a future version, please use 'min' instead.\n",
      "  data_5min = data.resample('5T').agg({\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        Entry Datetime  Entry Price  Exit Price       Exit Datetime   Return%\n",
      "0  2008-01-01 08:00:00   652.099209  652.120639 2008-01-01 08:10:00  0.003286\n",
      "1  2008-01-01 08:15:00   652.131354  652.152783 2008-01-01 08:25:00  0.003286\n",
      "2  2008-01-01 08:30:00   652.163498  652.184928 2008-01-01 08:40:00  0.003286\n",
      "3  2008-01-01 08:45:00   652.195643  652.217072 2008-01-01 08:55:00  0.003286\n",
      "4  2008-01-01 09:00:00   652.227787  652.249217 2008-01-01 09:10:00  0.003286\n",
      "..                 ...          ...         ...                 ...       ...\n",
      "83 2008-01-07 21:25:00   697.417031  697.471637 2008-01-07 21:35:00  0.007830\n",
      "84 2008-01-07 21:40:00   697.498940  697.553545 2008-01-07 21:50:00  0.007829\n",
      "85 2008-01-07 21:55:00   697.580848  697.635454 2008-01-07 22:05:00  0.007828\n",
      "86 2008-01-07 22:10:00   697.662757  697.717362 2008-01-07 22:20:00  0.007827\n",
      "87 2008-01-07 22:25:00   697.744665  697.799271 2008-01-07 22:35:00  0.007826\n",
      "\n",
      "[88 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "# Example usage\n",
    "# Read only 1 month of data from the CSV file\n",
    "data = pd.read_csv('data/RELIANCE_1m.csv', parse_dates=['Date'], date_parser=lambda x: pd.to_datetime(x, format='%Y-%m-%d %H:%M:%S'))\n",
    "# Keep only the first 10,000 rows from the CSV file\n",
    "data = data.head(1000)\n",
    "print(f\"Data shape after filtering for the last month: {data.shape}\")\n",
    "print(data.head())\n",
    "\n",
    "# Aggregating 1-minute data to 5-minute intervals\n",
    "data['Date'] = pd.to_datetime(data['Date'])\n",
    "data.set_index('Date', inplace=True)\n",
    "data_5min = data.resample('5T').agg({\n",
    "    'Open': 'first',\n",
    "    'High': 'max',\n",
    "    'Low': 'min',\n",
    "    'Close': 'last',\n",
    "    'Adj Close': 'last',\n",
    "    'Volume': 'sum'\n",
    "}).dropna()\n",
    "\n",
    "# Use the aggregated data for VWAP calculation and strategy\n",
    "data_5min = calculate_vwap(data_5min)\n",
    "data_5min = identify_reversal_candles(data_5min)\n",
    "\n",
    "# Plot the aggregated data\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(data_5min['VWAP'], label='VWAP', color='orange')\n",
    "plt.plot(data_5min['Close'], label='Close Price', color='blue')\n",
    "# Fixing the ValueError by aligning indices for scatter plot\n",
    "reversal_points = data_5min[data_5min['Reversal']]\n",
    "plt.scatter(reversal_points.index, reversal_points['Close'], label='Reversal Candles', color='red', marker='o')\n",
    "plt.legend()\n",
    "plt.title('VWAP Reversion Strategy (5-Minute Data)')\n",
    "plt.show()\n",
    "\n",
    "# Backtesting function\n",
    "# Enhanced backtesting logic to address repetitive entries and exits\n",
    "def backtest_strategy(data, min_holding_period=2):\n",
    "    trades = []\n",
    "    in_trade = False  # Track if a trade is active\n",
    "    entry_index = None\n",
    "\n",
    "    for i in range(1, len(data)):\n",
    "        if not in_trade and data['Reversal'].iloc[i]:\n",
    "            # Entry condition: Reversal candle\n",
    "            entry_price = data['Close'].iloc[i]\n",
    "            entry_datetime = data.index[i]\n",
    "            entry_index = i\n",
    "            in_trade = True\n",
    "\n",
    "        elif in_trade and (i - entry_index) >= min_holding_period:\n",
    "            # Exit condition: Price returns to VWAP after minimum holding period\n",
    "            if data['Close'].iloc[i] >= data['VWAP'].iloc[i]:\n",
    "                exit_price = data['Close'].iloc[i]\n",
    "                exit_datetime = data.index[i]\n",
    "                return_pct = ((exit_price - entry_price) / entry_price) * 100\n",
    "\n",
    "                trades.append({\n",
    "                    'Entry Datetime': entry_datetime,\n",
    "                    'Entry Price': entry_price,\n",
    "                    'Exit Price': exit_price,\n",
    "                    'Exit Datetime': exit_datetime,\n",
    "                    'Return%': return_pct\n",
    "                })\n",
    "\n",
    "                in_trade = False  # Reset trade status\n",
    "\n",
    "    return pd.DataFrame(trades)\n",
    "\n",
    "# Example usage\n",
    "# Assuming data_5min is already prepared as per the earlier code\n",
    "backtest_results = backtest_strategy(data_5min)\n",
    "print(backtest_results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4932359",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot entry and exit markers on the VWAP chart\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(data_5min['VWAP'], label='VWAP', color='orange')\n",
    "plt.plot(data_5min['Close'], label='Close Price', color='blue')\n",
    "# Plot reversal points\n",
    "plt.scatter(reversal_points.index, reversal_points['Close'], label='Reversal Candles', color='red', marker='o')\n",
    "# Plot entry and exit points\n",
    "for _, trade in backtest_results.iterrows():\n",
    "    plt.scatter(trade['Entry Datetime'], trade['Entry Price'], color='green', label='Entry', marker='^')\n",
    "    plt.scatter(trade['Exit Datetime'], trade['Exit Price'], color='purple', label='Exit', marker='v')\n",
    "plt.legend()\n",
    "plt.title('VWAP Reversion Strategy with Entry and Exit Markers')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "trade",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
